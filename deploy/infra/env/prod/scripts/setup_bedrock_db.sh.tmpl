#!/bin/bash
set -e

echo "Running database setup..."

export PGPASSWORD='${ password }'

# Check if the database already exists
DB_EXISTS=$(psql -h ${ aurora_endpoint } \
                -p ${ aurora_port } \
                -U ${ aurora_username } \
                -d postgres \
                -t -c "SELECT 1 FROM pg_database WHERE datname = 'bedrock_kb';")

if [ -z "$DB_EXISTS" ]; then
  psql -h ${ aurora_endpoint } \
       -p ${ aurora_port } \
       -U ${ aurora_username } \
       -d postgres \
       -c "CREATE DATABASE bedrock_kb;"
else
  echo "Database bedrock_kb already exists, skipping creation."
fi

psql -h ${ aurora_endpoint } \
     -p ${ aurora_port } \
     -U ${ aurora_username } \
     -d bedrock_kb <<SQL
CREATE EXTENSION IF NOT EXISTS vector;
CREATE SCHEMA IF NOT EXISTS bedrock_integration;
CREATE ROLE bedrock_user LOGIN;
GRANT ALL ON SCHEMA bedrock_integration TO bedrock_user;
CREATE TABLE IF NOT EXISTS bedrock_integration.bedrock_kb (
    id uuid PRIMARY KEY,
    embedding vector(1024),
    chunks text,
    metadata json,
    custom_metadata jsonb
);
CREATE INDEX IF NOT EXISTS bedrock_kb_hnsw_idx ON bedrock_integration.bedrock_kb USING hnsw (embedding vector_cosine_ops) WITH (ef_construction=256);
CREATE INDEX IF NOT EXISTS bedrock_kb_chunks_idx ON bedrock_integration.bedrock_kb USING gin (to_tsvector('simple', chunks));
CREATE INDEX IF NOT EXISTS bedrock_kb_metadata_idx ON bedrock_integration.bedrock_kb USING gin (custom_metadata);
SQL

if [ $? -eq 0 ]; then
  echo "Database setup completed successfully."
else
  echo "Database setup failed with error code $?"
  exit 1
fi
