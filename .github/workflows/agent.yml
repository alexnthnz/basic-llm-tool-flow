name: Agent Model

on:
  pull_request:
    branches:
      - main
    paths:
      - 'chatbot/agent/**'
      - '.github/workflows/agent.yml'
    types:
      - closed

env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  build-and-test:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    environment: prod

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install Python dependencies
        working-directory: chatbot/agent
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with pytest
        working-directory: chatbot/agent
        run: |
          pip install pytest
          pytest

      - name: Build Docker image for Agent Model
        working-directory: chatbot/agent
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.AGENT_MODEL_ECR }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "IMAGE_URI=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: deploy/infra/env/prod
        run: terraform init

      - name: Terraform format
        id: fmt
        run: terraform fmt -check
    
      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: deploy/infra/env/prod
        run: terraform plan -no-color -input=false

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
 
            <details><summary>Show Plan</summary>
 
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
 
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
 
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        working-directory: deploy/infra/env/prod
        run: |
          terraform apply -auto-approve \
            -input=false \
            -var="aws_region=${{ secrets.AWS_REGION }}" \
            -var="environment=${{ secrets.ENVIRONMENT }}" \
            -var="agent_model_role_name=${{ secrets.AGENT_MODEL_ROLE_ARN }}" \
            -var="foundation_model_role_name=${{ secrets.FOUNDATION_MODEL_ROLE_ARN }}" \
            -var="model_artifacts_bucket_name=${{ secrets.MODEL_ARTIFACTS_BUCKET_NAME }}" \
            -var="agent_model_name=${{ secrets.AGENT_MODEL_NAME }}" \
            -var="agent_ecr_image_uri=${{ env.IMAGE_URI }}" \
            -var="agent_instance_type=${{ secrets.AGENT_INSTANCE_TYPE }}" \
            -var="agent_initial_instance_count=${{ secrets.AGENT_INITIAL_INSTANCE_COUNT }}"
